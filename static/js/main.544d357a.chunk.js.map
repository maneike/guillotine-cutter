{"version":3,"sources":["components/Workspace.js","components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["Workspace","props","listRectangles","rectangles","map","rectangle","style","width","w","height","h","background","c","display","float","position","className","Form","current","Math","floor","random","toString","useState","setWidth","setHeight","rectanglesItems","setRectanglesItems","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4SAEe,SAASA,EAAUC,GAChC,IACMC,EADaD,EAAME,WACSC,KAAI,SAACC,GAAD,OACpC,sBACEC,MAAO,CACLC,MAAOF,EAAUG,EACjBC,OAAQJ,EAAUK,EAClBC,WAAYN,EAAUO,EACtBC,QAAS,eACTC,MAAO,OACPC,SAAU,YAPd,UAUG,EAAIV,EAAUG,EAVjB,MAUuB,EAAIH,EAAUK,QAIvC,OACE,mCACE,qBAAKM,UAAU,YAAf,SAA4Bd,M,oBChBnB,SAASe,EAAKhB,GAC3B,IACIiB,EAAU,IADIC,KAAKC,MAAsB,SAAhBD,KAAKE,UAAqBC,SAAS,IAD9B,EAIRC,mBAAS,IAJD,mBAI3BhB,EAJ2B,KAIpBiB,EAJoB,OAKND,mBAAS,IALH,mBAK3Bd,EAL2B,KAKnBgB,EALmB,OAMYF,mBAAS,IANrB,mBAM3BG,EAN2B,KAMVC,EANU,KAqBlC,OACE,qCACE,uBACA,uBAAMC,SAfe,SAACC,GACxBA,EAAEC,iBACFH,EAAmB,GAAD,mBACbD,GADa,CAEhB,CACElB,EAAGD,EAAQ,EACXG,EAAGD,EAAS,EACZG,EAAGM,OAQL,UACE,kCACE,4CACC,UACD,uBACEa,KAAK,OACLC,YAAY,WACZC,MAAO1B,EACP2B,SAAU,SAACL,GAAD,OAAOL,EAASK,EAAEM,OAAOF,UAEpC,YACD,uBACEF,KAAK,OACLC,YAAY,WACZC,MAAOxB,EACPyB,SAAU,SAACL,GAAD,OAAOJ,EAAUI,EAAEM,OAAOF,aAGxC,uBACA,uBAAOF,KAAK,SAASE,MAAM,uBAE7B,oBAAG3B,MAAO,CAAEO,QAAS,SAArB,UACE,cAAC,IAAD,IADF,2HAIA,cAAC,EAAD,CAAWV,WAAYuB,OCtCdU,MAbf,WACE,OACE,mCACE,sBAAKpB,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,yDAEF,cAAC,EAAD,UCEOqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.544d357a.chunk.js","sourcesContent":["import \"./Workspace.css\";\n\nexport default function Workspace(props) {\n  const rectangles = props.rectangles;\n  const listRectangles = rectangles.map((rectangle) => (\n    <div\n      style={{\n        width: rectangle.w,\n        height: rectangle.h,\n        background: rectangle.c,\n        display: \"inline-block\",\n        float: \"left\",\n        position: \"relative\",\n      }}\n    >\n      {2 * rectangle.w} x {2 * rectangle.h}\n    </div>\n  ));\n\n  return (\n    <>\n      <div className=\"workspace\">{listRectangles}</div>\n    </>\n  );\n}\n","import { useState } from \"react\";\nimport \"./Form.css\";\nimport Workspace from \"./Workspace\";\nimport InfoIcon from \"@material-ui/icons/Info\";\n\nexport default function Form(props) {\n  var randomColor = Math.floor(Math.random() * 16777215).toString(16);\n  var current = \"#\" + randomColor;\n\n  const [width, setWidth] = useState(\"\");\n  const [height, setHeight] = useState(\"\");\n  const [rectanglesItems, setRectanglesItems] = useState([]);\n\n  //if (w || h == 0 || null) dont display;\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    setRectanglesItems([\n      ...rectanglesItems,\n      {\n        w: width / 2,\n        h: height / 2,\n        c: current,\n      },\n    ]);\n  };\n\n  return (\n    <>\n      <br />\n      <form onSubmit={handleFormSubmit}>\n        <label>\n          <p>Dimensions:</p>\n          {\"Width: \"}\n          <input\n            type=\"text\"\n            placeholder=\"e.g. 200\"\n            value={width}\n            onChange={(e) => setWidth(e.target.value)}\n          />\n          {\" Height: \"}\n          <input\n            type=\"text\"\n            placeholder=\"e.g. 100\"\n            value={height}\n            onChange={(e) => setHeight(e.target.value)}\n          />\n        </label>\n        <br />\n        <input type=\"submit\" value=\"Add a rectangle\" />\n      </form>\n      <p style={{ display: \"block\" }}>\n        <InfoIcon /> Some rectangles may appear invisible. That's because the\n        color of the figures probably matches the background color.\n      </p>\n      <Workspace rectangles={rectanglesItems} />\n    </>\n  );\n}\n","import \"./App.css\";\nimport Form from \"./components/Form\";\n\nfunction App() {\n  return (\n    <>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Guillotine-cutter App</h1>\n        </header>\n        <Form />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}